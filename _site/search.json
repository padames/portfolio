[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Software Engineering bits",
    "section": "",
    "text": "This is the home for a few short posts and presentations made throughout the years. Most are related to subjects of personal interest like data modeling and visualization. I am also very fond of Machine Learning, High-Performance computing, and computer languages in general.\n\nEverything here is licensed under Creative Commons Attribution-ShareAlike 4.0 International\n\nIn general most endeavors thrive when we collaborate and share our failures as much as our successes. This is specially true given the observation that there are far more paths leading to failure that to success. It pays to know how to fail as much as how to succeed.\n\n\n\n\n\n\n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nAnimation to explain coupled time-series\n\n\n\n\n\n\n\nVisualization\n\n\nR\n\n\nggplot2\n\n\n\n\n\n\n\n\n\n\n\nDec 15, 2024\n\n\nPablo Adames\n\n\n\n\n\n\n  \n\n\n\n\nHow to create a GIF file from individual images\n\n\n\n\n\n\n\nVisualization\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nSep 6, 2021\n\n\nPablo Adames\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Animation to explain coupled time-series",
    "section": "",
    "text": "I consider Edward R. Tufte one of the modern experts in data visualization. I was able to attend one of his talks in Seattle in May, 2019. We walked away with a beautiful set of his most important books and the challenge of stuffing them in my carry-on bag on the flight back to Calgary.\nAside from the pleasant experience and the wonderful books I bring this up because there are two kinds of data visualization examples he introduces at the beginning of his book, “The Visual Display of Quantitative Information”: data maps and time series. Visual excellence, Tufte claims in his book, is achieved when one can convey an idea in the shortest time using the least amount of ink and printed space to an observer.\nOne of the time-series examples is a facet grid plot representing the evolution of unemployment rate and inflation in several countries. The term facet grid, of course is adopted from ggplot lingo."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is a personal blog with entries reflecting my professional interests in computer languages and data analysis and visualization.\nMost of my professional experience has been developing Engineering applications using Matlab for modelling and C++ for library implementation. I used to like Python but strongly typed or more declarative languages win the day for me. I have way too many books on Haskell, a language that has formed me in many ways. I love functional programming and I am so glad C++ and Python have embraced it.\nIn the last 5 years, after completing a Master of Engineering in Software Engineering at the University of Calgary I have had the chance to designing and use relational and document (also called noSQL) databases for system development.\nI am pretty good at Linux bash programming as some of my colleagues at work know too well. However I am fonder of more Lispy languages like R when it comes to scripting. As far as natively compiled languages I recently I took up Rust after realizing how much of an improvement it is over C and C++ in terms of memory safety and overall speed of development.\nI will write more on this Rust journey because I think this is technology that can change the way we build software infrastructure."
  },
  {
    "objectID": "posts/welcome/index.html#the-problem-statement",
    "href": "posts/welcome/index.html#the-problem-statement",
    "title": "Animation to explain coupled time-series",
    "section": "The problem statement",
    "text": "The problem statement\nOne of the examples used in Hadley Wickham’s book, “ggplot2 - Elegant Grahics for Data Analysis”, has also to do with the representation of time evolution of two economic variables related to unemployment in the USA. The current computational resources available to us have made it relatively easy to address these visualization challenges to achieve visual excellence.\nThis blog post is about the way we can add a third dimension to a 2-D plot using animation to explore the evolution of two related time-series.\nIndividual time dependent variables are easily visualized by drawing their time series representation on a two-dimensional plot. The difficulty becomes visualizing two time series in the same traditional graph. One elegant solution was mentioned in Tufte’s book mentioned in the introduction to this post. Let’s use animation to add more insight into the data."
  },
  {
    "objectID": "posts/welcome/index.html#the-economics-data-set",
    "href": "posts/welcome/index.html#the-economics-data-set",
    "title": "Animation to explain coupled time-series",
    "section": "The economics data set",
    "text": "The economics data set\nThese examples are re-used from section 2.6.5 of https://ggplot2-book.org/getting-started#sec-line.\nThe data set called economics from the ggplot2 package, has employment statistics on the US measured over the last 40 years up until 2015.\nHere is a brief look at the first 5 out of 574 rows of the dataframe economics.\n\ndata &lt;- head(economics, n=5)\nknitr::kable(data)\n\n\n\n\ndate\npce\npop\npsavert\nuempmed\nunemploy\n\n\n\n\n1967-07-01\n506.7\n198712\n12.6\n4.5\n2944\n\n\n1967-08-01\n509.8\n198911\n12.6\n4.7\n2945\n\n\n1967-09-01\n515.6\n199113\n11.9\n4.6\n2958\n\n\n1967-10-01\n512.2\n199311\n12.9\n4.9\n3143\n\n\n1967-11-01\n517.4\n199498\n12.8\n4.7\n3066"
  },
  {
    "objectID": "posts/welcome/index.html#visualizing-the-unemployment-rate",
    "href": "posts/welcome/index.html#visualizing-the-unemployment-rate",
    "title": "Animation to explain coupled time-series",
    "section": "Visualizing the Unemployment Rate",
    "text": "Visualizing the Unemployment Rate\nLet’s first make a simple time series plot of the unemployment rate. This is a continuous variable that is computed with the ratio unemploy/pop.\nIn ggplot2 a frame defines the first mapping from variables to a space where the data will be represented. It is created with the function aes(). The obvious frame for this plot is defined by the two variables date and unemploy / pop. They are mapped to the x and y coordinates of a 2-D plane. The glyphs drawn over this frame will be lines between the data points located in the frame, they are created with the function geom_line(). This function defines a layer over the frame.\n\nggplot(data = economics, mapping = aes(x = date, y = unemploy / pop)) +\n  geom_line()\n\n\n\n\nTechnically speaking unemploy / pop represents the “population rate of unemployment as a fraction of the population able to work that is unemployed”, (https://www.bls.gov/cps/cps_htgm.htm#definitions)"
  },
  {
    "objectID": "posts/welcome/index.html#visualizing-the-unemployment-median-duration-in-weeks",
    "href": "posts/welcome/index.html#visualizing-the-unemployment-median-duration-in-weeks",
    "title": "Animation to explain coupled time-series",
    "section": "Visualizing the unemployment median duration in weeks",
    "text": "Visualizing the unemployment median duration in weeks\nAnother variable called uempmed from the same dataset tracks the median length of time in weeks of unemployment.\n\nggplot(economics, aes(date, uempmed)) +\n  geom_line()\n\n\n\n\nFrom these two plots one can observe the recent trend towards longer median unemployment time in the decade of 2010. There are also cycles of between 5 and 10 years of peak unemployment rates.\nAn interesting question is how these two time series correlate over time. Are there interactions between these two variables that we could observe in one plot?"
  },
  {
    "objectID": "posts/welcome/index.html#visualizing-both-variables-in-the-same-plot",
    "href": "posts/welcome/index.html#visualizing-both-variables-in-the-same-plot",
    "title": "Animation to explain coupled time-series",
    "section": "Visualizing both variables in the same plot",
    "text": "Visualizing both variables in the same plot\nIn ggplot2, the frame for a representation that shows both variables on an line plot can be defined by a mapping of each variable to the x and y coordinates of the plane. We can create two types of glyphs over it: one is points shown by a layer defined by geom_point to show the location of the variables at a point in time. The other type of glyph is lines to show the sequential trajectory, ordered by time, from one point to the next. This is captured by the layer geom_path. The figure below shows such a graph.\n\nggplot(economics, aes(unemploy / pop, uempmed)) + \n  geom_path() +\n  geom_point()\n\n\n\n\nIt is hard to understand the direction of time from the lines alone. For example, it is difficult to visualize where the first, the last, or any years in between have happened.\nThis can be addressed by adding a mapping from the property colour to the variable year in the layer geom_point. R uses a default colour scale to assign specific colours from a colour palette to years.\nThe ggplot2 package defines the function aes() to create this many to many mapping.\n\nyear &lt;- function(x) as.POSIXlt(x)$year + 1900\nggplot(economics, aes(unemploy / pop, uempmed)) + \n  geom_path(colour = \"grey50\") +\n  geom_point(aes(colour = year(date)))\n\n\n\n\nThe layer geom_path has a mapping from each line created between points to the same colour value indicated by the specification “grey50”. The syntax does not require the use of the aes() function. It is a many to one mapping.\nThis plot is a good attempt at representing the time dimension with a varying shade of colour. This solution is not entirely satisfactory because the lines get too entangled making the progress of time confusing in some quadrants."
  },
  {
    "objectID": "posts/welcome/index.html#animation-to-the-rescue",
    "href": "posts/welcome/index.html#animation-to-the-rescue",
    "title": "Animation to explain coupled time-series",
    "section": "Animation to the rescue",
    "text": "Animation to the rescue\nWe can get a more sophisticated visualization by using animation to explain how the two variables change simultaneously as time passes. In the following plot, the values of unemployment rate and median unemployment length in weeks are displayed for every year. By pressing the PLAY button, one sees the points for each year over the line trajectory, from beginning to end. One can use the slider to visualize the position of the variables for any given year.\n\nlibrary(plotly)\nyear &lt;- function(x) as.POSIXlt(x)$year + 1900\np &lt;- ggplot(economics, aes(unemploy / pop, uempmed)) + \n  geom_path(colour = \"grey75\") +\n  geom_point(aes(colour = year(date), frame = year(date)))\n\nfig &lt;- ggplotly(p)\n\nfig &lt;- fig %&gt;% animation_opts(1000,\n                              easing = \"elastic\", \n                              redraw = FALSE )\nfig &lt;- fig %&gt;% animation_button(x = 0.05, xanchor = \"left\",\n                                y = 1.1, yanchor = \"top\")\nfig &lt;- fig %&gt;% animation_slider(currentvalue = list(prefix = \"YEAR \",\n                                                    font = list(color=\"red\")))\nfig\n\n\n\n\n\nFrom watching the motion of the annual data after pressing the Play button, one gets the sense that for the first 41 years the values of these two time series remained within the quadrant below the 15 week and to the left of 4% unemployment rate except for the years 1982 and 83. Then after 2009 the median unemployment length in weeks has increased over and above any value of the previous years in the USA according to this dataset.\nThe animation has achieved the introduction of a new dimension to represent the flow of time over the bi-dimensional plane representing the two time observed variables. In non-digital media the only alternative we would have is representing time progression with other dimensions like point color intensity or perhaps point diameter."
  },
  {
    "objectID": "posts/animationRescue/index.html",
    "href": "posts/animationRescue/index.html",
    "title": "Animation to explain coupled time-series",
    "section": "",
    "text": "I consider Edward E. Tufte one of the modern experts in data visualization. I attended one of his talks in Seattle in May 2019. All attendees walked away with a beautiful set of his most important books, while I left with the challenge of stuffing the set in my carry-on bag on the flight back to Calgary that night.\nAside from the pleasant experience and the wonderful books, I bring this up because Tufte introduces many clever and even beautiful examples of time series visualizations in his book “The Visual Display of Quantitative Information” ([1]). He claims that visual excellence is achieved when one can convey an idea to an observer without taking too long, using the least amount of ink and printed space. This implies cramming the most information possible with the least use of resources without obscuring meaning or confusing the main idea.\nOne of the time-series examples is a facet grid plot representing the evolution of the rate of unemployment and inflation in several countries, see the figure below. The term “facet grid” is used in ggplot2 lingo to refer to a table of plots comparing different subgroups within the data. This is not your traditional time series plot.\nRecently I was preparing a CalgaryR meetup presentation and reading the book by Hadley Wickham, the creator of ggplot2 ([2]). To my surprise, the last example introducing the concept of plot geoms, just before presenting facet grids, matched the idea used in the subplots of the example mentioned by Tufte. I realized then that I had found a use case for animation to improve this visualization in the era of digital media. Allow me to explain in this post."
  },
  {
    "objectID": "posts/animationRescue/index.html#the-problem-statement",
    "href": "posts/animationRescue/index.html#the-problem-statement",
    "title": "Animation to explain coupled time-series",
    "section": "The problem statement",
    "text": "The problem statement\nTo find a solution, let’s first highlight the problem. To do so we will formulate a research question and gradually build up a graphical representation to answer it. To do this, we will walk through the example from Hadley Wickham’s book on ggplot2 ([2]).\nWe want to show that by pushing the tools to their maximum we reach a climax, a point where we are constrained by the lack of motion. At that point in the story, we will have the right context to present animation to uncover a hidden feature of our data set.\nThe problem is how confusing it can be to add time as a third variable in a plot where each point is the intersection of two variables at different times.\nIt is simple to represent a time series by drawing the variable on one axis and time on the other. Tufte has many creative examples from several authors using this principle in his book. The difficulty becomes visualizing two of those time series on the same graph.\nA possible research question is what has been tried to address this limitation? And also, is there a novel approach to add visual dimensions to a flat X-Y plot without sacrificing visual excellence?"
  },
  {
    "objectID": "posts/animationRescue/index.html#the-economics-data-set",
    "href": "posts/animationRescue/index.html#the-economics-data-set",
    "title": "Animation to explain coupled time-series",
    "section": "The economics data set",
    "text": "The economics data set\nWith the problem statement out of the way, let’s move on to the .\nThese examples are re-used from section 2.6.5 of https://ggplot2-book.org/getting-started#sec-line.\nThe data set called economics from the ggplot2 package, has employment statistics on the US measured over the last 40 years up until 2015.\nHere is a brief look at the first 5 out of 574 rows of the dataframe economics.\n\ndata &lt;- head(economics, n=5)\nknitr::kable(data)\n\n\n\n\ndate\npce\npop\npsavert\nuempmed\nunemploy\n\n\n\n\n1967-07-01\n506.7\n198712\n12.6\n4.5\n2944\n\n\n1967-08-01\n509.8\n198911\n12.6\n4.7\n2945\n\n\n1967-09-01\n515.6\n199113\n11.9\n4.6\n2958\n\n\n1967-10-01\n512.2\n199311\n12.9\n4.9\n3143\n\n\n1967-11-01\n517.4\n199498\n12.8\n4.7\n3066"
  },
  {
    "objectID": "posts/animationRescue/index.html#visualizing-the-unemployment-rate",
    "href": "posts/animationRescue/index.html#visualizing-the-unemployment-rate",
    "title": "Animation to explain coupled time-series",
    "section": "Visualizing the Unemployment Rate",
    "text": "Visualizing the Unemployment Rate\nLet’s first make a simple time series plot of the unemployment rate. This is a continuous variable that is computed with the ratio unemploy/pop.\nIn ggplot2 a frame defines the first mapping from variables to a space where the data will be represented. It is created with the function aes(). The obvious frame for this plot is defined by the two variables date and unemploy / pop. They are mapped to the x and y coordinates of a 2-D plane. The glyphs drawn over this frame will be lines between the data points located in the frame, they are created with the function geom_line(). This function defines a layer over the frame.\n\nggplot(data = economics, mapping = aes(x = date, y = unemploy / pop)) +\n  geom_line()\n\n\n\n\nTechnically speaking unemploy / pop represents the “population rate of unemployment as a fraction of the population able to work that is unemployed”, (https://www.bls.gov/cps/cps_htgm.htm#definitions)"
  },
  {
    "objectID": "posts/animationRescue/index.html#visualizing-the-unemployment-median-duration-in-weeks",
    "href": "posts/animationRescue/index.html#visualizing-the-unemployment-median-duration-in-weeks",
    "title": "Animation to explain coupled time-series",
    "section": "Visualizing the unemployment median duration in weeks",
    "text": "Visualizing the unemployment median duration in weeks\nAnother variable called uempmed from the same dataset tracks the median length of time in weeks of unemployment.\n\nggplot(economics, aes(date, uempmed)) +\n  geom_line()\n\n\n\n\nFrom these two plots one can observe the recent trend towards longer median unemployment time in the decade of 2010. There are also cycles of between 5 and 10 years of peak unemployment rates.\nAn interesting question is how these two time series correlate over time. Are there interactions between these two variables that we could observe in one plot?"
  },
  {
    "objectID": "posts/animationRescue/index.html#visualizing-both-variables-in-the-same-plot",
    "href": "posts/animationRescue/index.html#visualizing-both-variables-in-the-same-plot",
    "title": "Animation to explain coupled time-series",
    "section": "Visualizing both variables in the same plot",
    "text": "Visualizing both variables in the same plot\nIn ggplot2, the frame for a representation that shows both variables on an line plot can be defined by a mapping of each variable to the x and y coordinates of the plane. We can create two types of glyphs over it: one is points shown by a layer defined by geom_point to show the location of the variables at a point in time. The other type of glyph is lines to show the sequential trajectory, ordered by time, from one point to the next. This is captured by the layer geom_path. The figure below shows such a graph.\n\nggplot(economics, aes(unemploy / pop, uempmed)) + \n  geom_path() +\n  geom_point()\n\n\n\n\nIt is hard to understand the direction of time from the lines alone. For example, it is difficult to visualize where the first, the last, or any years in between have happened.\nThis can be addressed by adding a mapping from the property colour to the variable year in the layer geom_point. R uses a default colour scale to assign specific colours from a colour palette to years.\nThe ggplot2 package defines the function aes() to create this many to many mapping.\n\nyear &lt;- function(x) as.POSIXlt(x)$year + 1900\nggplot(economics, aes(unemploy / pop, uempmed)) + \n  geom_path(colour = \"grey50\") +\n  geom_point(aes(colour = year(date)))\n\n\n\n\nThe layer geom_path has a mapping from each line created between points to the same colour value indicated by the specification “grey50”. The syntax does not require the use of the aes() function. It is a many to one mapping.\nThis plot is a good attempt at representing the time dimension with a varying shade of colour. This is unsatisfactory because the lines get too tangled, making the direction of time unclear. This looks eerily similar to the example Tufte refers to in his book, the difference is that we don’t print years near some of the dots. Instead we chose to use the shade of blue in the points as a way to convey information about the year."
  },
  {
    "objectID": "posts/animationRescue/index.html#animation-to-the-rescue",
    "href": "posts/animationRescue/index.html#animation-to-the-rescue",
    "title": "Animation to explain coupled time-series",
    "section": "Animation to the rescue",
    "text": "Animation to the rescue\nWe can get a more sophisticated visualization by using animation to explain how the two variables change simultaneously as time passes. In the following plot, the values of unemployment rate and median unemployment length in weeks are displayed for every year. By pressing the PLAY button, one sees the points for each year over the line trajectory, from beginning to end. One can use the slider to visualize the position of the variables for any given year.\n\nlibrary(plotly)\nyear &lt;- function(x) as.POSIXlt(x)$year + 1900\np &lt;- ggplot(economics, aes(unemploy / pop, uempmed)) + \n  geom_path(colour = \"grey75\") +\n  geom_point(aes(colour = year(date), frame = year(date)))\n\nfig &lt;- ggplotly(p)\n\nfig &lt;- fig %&gt;% animation_opts(1000,\n                              easing = \"elastic\", \n                              redraw = FALSE )\nfig &lt;- fig %&gt;% animation_button(x = 0.05, xanchor = \"left\",\n                                y = 1.1, yanchor = \"top\")\nfig &lt;- fig %&gt;% animation_slider(currentvalue = list(prefix = \"YEAR \",\n                                                    font = list(color=\"red\")))\nfig\n\n\n\n\n\nFrom watching the motion of the annual data after pressing the Play button, one gets the sense that for the first 41 years the values of these two time series remained within the quadrant below the 15 week and to the left of 4% unemployment rate except for the years 1982 and 83. Then after 2009 the median unemployment length in weeks has increased over and above any value of the previous years in the USA according to this dataset.\nThe animation has achieved the introduction of a new dimension to represent the flow of time over the bi-dimensional plane representing the two time observed variables. In non-digital media the only alternative we would have is representing time progression with other dimensions like point color intensity or perhaps point diameter.\n\nReferences\n\n\n[1] Tufte ER. The Visual Display of Quantitative Information. Second Ed. Graphics Press; 2001.\n\n\n[2] Wickham H. ggplot2: Elegant Graphics for Data Analysis. Second Ed. Springer-Verlag New York; 2016."
  },
  {
    "objectID": "posts/AnimationWorkflow /index.html",
    "href": "posts/AnimationWorkflow /index.html",
    "title": "How to create a GIF file from individual images",
    "section": "",
    "text": "Do you ever feel like a plain graph is not sufficient to explain some trend in your data or the solution of a mathematical model? For those times, generating animations can be just what you need. They can also become visualization aids during data exploration or a means to explain to yourself and others observed or simulated results.\nThis is by no means an exhaustive list of use cases, however, they are pretty common and their impact can be high. The deliverable is an embedded moving graph for your presentation or web content. After all, if an image is worth a thousand words then an animation should be worth a bit more.\nThis workflow is the basis to create the visualizations used in this LinkedIn post [1]\n\n\n\nAnimation from the post mentioned in [1]\n\n\n\n\n\n\n[1] Adames P. Expected Values and Variance 2021."
  },
  {
    "objectID": "posts/AnimationWorkflow /index.html#why-doing-this",
    "href": "posts/AnimationWorkflow /index.html#why-doing-this",
    "title": "How to create a GIF file from individual images",
    "section": "",
    "text": "Do you ever feel like a plain graph is not sufficient to explain some trend in your data or the solution of a mathematical model? For those times, generating animations can be just what you need. They can also become visualization aids during data exploration or a means to explain to yourself and others observed or simulated results.\nThis is by no means an exhaustive list of use cases, however, they are pretty common and their impact can be high. The deliverable is an embedded moving graph for your presentation or web content. After all, if an image is worth a thousand words then an animation should be worth a bit more.\nThis workflow is the basis to create the visualizations used in this LinkedIn post [1]\n\n\n\nAnimation from the post mentioned in [1]\n\n\n\n\n\n\n[1] Adames P. Expected Values and Variance 2021."
  },
  {
    "objectID": "posts/AnimationWorkflow/index.html",
    "href": "posts/AnimationWorkflow/index.html",
    "title": "How to create a GIF file from individual images",
    "section": "",
    "text": "Do you ever feel like a plain graph is not sufficient to explain some trend in your data or the solution of a mathematical model? For those times, generating animations can be just what you need. They can also become visualization aids during data exploration or a means to explain to yourself and others observed or simulated results.\nThis is by no means an exhaustive list of use cases, however, they are pretty common and their impact can be high. The deliverable is an embedded moving graph for your presentation or web content. After all, if an image is worth a thousand words then an animation should be worth a bit more.\nThis workflow is the basis to create the visualizations used in this LinkedIn post [1]\n\n\n\nAnimation from the post mentioned in [1]\n\n\n\n\n\n\n[1] Adames P. Expected Values and Variance 2021."
  },
  {
    "objectID": "posts/AnimationWorkflow/index.html#why-doing-this",
    "href": "posts/AnimationWorkflow/index.html#why-doing-this",
    "title": "How to create a GIF file from individual images",
    "section": "",
    "text": "Do you ever feel like a plain graph is not sufficient to explain some trend in your data or the solution of a mathematical model? For those times, generating animations can be just what you need. They can also become visualization aids during data exploration or a means to explain to yourself and others observed or simulated results.\nThis is by no means an exhaustive list of use cases, however, they are pretty common and their impact can be high. The deliverable is an embedded moving graph for your presentation or web content. After all, if an image is worth a thousand words then an animation should be worth a bit more.\nThis workflow is the basis to create the visualizations used in this LinkedIn post [1]\n\n\n\nAnimation from the post mentioned in [1]\n\n\n\n\n\n\n[1] Adames P. Expected Values and Variance 2021."
  }
]